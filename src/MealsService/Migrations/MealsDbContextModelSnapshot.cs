// <auto-generated />
using MealsService;
using MealsService.Diets.Data;
using MealsService.Recipes.Data;
using MealsService.Schedules.Data;
using MealsService.Stats.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace MealsService.Migrations
{
    [DbContext(typeof(MealsDbContext))]
    partial class MealsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("MealsService.Diets.Data.ChangeDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DayOfWeek");

                    b.Property<int>("TargetDays");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.ToTable("ChangeDays");
                });

            modelBuilder.Entity("MealsService.Diets.Data.DietGoal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Current");

                    b.Property<int>("ReductionRate");

                    b.Property<int>("Target");

                    b.Property<int>("TargetDietId");

                    b.Property<DateTime>("Updated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.ComputedColumn);

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("TargetDietId");

                    b.HasIndex("UserId");

                    b.ToTable("DietGoals");
                });

            modelBuilder.Entity("MealsService.Diets.Data.DietType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<string>("ShortDescription");

                    b.HasKey("Id");

                    b.ToTable("DietTypes");
                });

            modelBuilder.Entity("MealsService.Diets.Data.MenuPreference", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<int>("CurrentDietTypeId");

                    b.Property<string>("MealTypesList");

                    b.Property<int>("RecipeStyle");

                    b.Property<int>("ShoppingFreq");

                    b.HasKey("UserId");

                    b.HasIndex("CurrentDietTypeId");

                    b.ToTable("MenuPreferences");
                });

            modelBuilder.Entity("MealsService.Diets.Data.PrepPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NumTargetDays");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.ToTable("PrepPlans");
                });

            modelBuilder.Entity("MealsService.Diets.Data.PrepPlanConsumer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DayOfWeek");

                    b.Property<int>("GeneratorId");

                    b.Property<int>("MealType");

                    b.Property<int>("NumServings");

                    b.Property<int>("PrepPlanId");

                    b.HasKey("Id");

                    b.HasIndex("GeneratorId");

                    b.HasIndex("PrepPlanId");

                    b.ToTable("PrepPlanConsumers");
                });

            modelBuilder.Entity("MealsService.Diets.Data.PrepPlanGenerator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DayOfWeek");

                    b.Property<int>("MealType");

                    b.Property<int>("NumServings");

                    b.Property<int>("PrepPlanId");

                    b.HasKey("Id");

                    b.HasIndex("PrepPlanId");

                    b.ToTable("PrepPlanGenerators");
                });

            modelBuilder.Entity("MealsService.Ingredients.Data.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brief");

                    b.Property<int?>("CategoryId");

                    b.Property<string>("Description");

                    b.Property<string>("Image");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("MealsService.Ingredients.Data.IngredientCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(32);

                    b.Property<int>("Order");

                    b.HasKey("Id");

                    b.ToTable("IngredientCategories");
                });

            modelBuilder.Entity("MealsService.Ingredients.Data.IngredientMeasureType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IngredientId");

                    b.Property<int>("MeasureTypeId");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("MeasureTypeId");

                    b.ToTable("IngredientMeasureTypes");
                });

            modelBuilder.Entity("MealsService.Ingredients.Data.IngredientTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IngredientId");

                    b.Property<int>("TagId");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("TagId");

                    b.ToTable("IngredientTags");
                });

            modelBuilder.Entity("MealsService.Ingredients.Data.MeasureType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("Short");

                    b.HasKey("Id");

                    b.ToTable("MeasureTypes");
                });

            modelBuilder.Entity("MealsService.Recipes.Data.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brief");

                    b.Property<int>("CookTime");

                    b.Property<string>("Description");

                    b.Property<string>("Image");

                    b.Property<int>("MealType");

                    b.Property<string>("Name");

                    b.Property<int>("NumServings");

                    b.Property<int>("PrepTime");

                    b.Property<string>("Slug");

                    b.Property<string>("Source")
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Slug");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("MealsService.Recipes.Data.RecipeDietType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DietTypeId");

                    b.Property<int>("RecipeId");

                    b.HasKey("Id");

                    b.HasIndex("DietTypeId");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeDietTypes");
                });

            modelBuilder.Entity("MealsService.Recipes.Data.RecipeIngredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Amount");

                    b.Property<string>("AmountType");

                    b.Property<int>("IngredientId");

                    b.Property<int>("MeasureTypeId");

                    b.Property<int>("RecipeId");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("MeasureTypeId");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeIngredients");
                });

            modelBuilder.Entity("MealsService.Recipes.Data.RecipeStep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Order");

                    b.Property<int>("RecipeId");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeSteps");
                });

            modelBuilder.Entity("MealsService.Recipes.Data.RecipeVote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RecipeId");

                    b.Property<int>("UserId");

                    b.Property<int>("Vote");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.HasIndex("UserId");

                    b.ToTable("RecipeVotes");
                });

            modelBuilder.Entity("MealsService.Schedules.Data.Meal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ConfirmStatus");

                    b.Property<bool>("IsChallenge");

                    b.Property<bool>("IsLeftovers");

                    b.Property<int>("PreparationId");

                    b.Property<int>("RecipeId");

                    b.Property<int>("ScheduleDayId");

                    b.Property<int>("Servings");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.HasIndex("PreparationId");

                    b.HasIndex("RecipeId");

                    b.HasIndex("ScheduleDayId");

                    b.ToTable("Meals");
                });

            modelBuilder.Entity("MealsService.Schedules.Data.Preparation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MealType");

                    b.Property<int>("RecipeId");

                    b.Property<int>("ScheduleDayId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.HasIndex("ScheduleDayId");

                    b.ToTable("Preparations");
                });

            modelBuilder.Entity("MealsService.Schedules.Data.ScheduleDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<DateTime>("Date");

                    b.Property<int>("DietTypeId");

                    b.Property<DateTime>("Modified");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("DietTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("ScheduleDays");
                });

            modelBuilder.Entity("MealsService.Schedules.Data.ScheduleGenerated", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate");

                    b.Property<string>("ExcludedTags");

                    b.Property<DateTime>("StartDate");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ScheduleGenerations");
                });

            modelBuilder.Entity("MealsService.ShoppingList.Data.ShoppingListItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Amount");

                    b.Property<bool>("Checked");

                    b.Property<int>("IngredientId");

                    b.Property<string>("IngredientName")
                        .HasMaxLength(64);

                    b.Property<bool>("ManuallyAdded");

                    b.Property<int>("MeasureTypeId");

                    b.Property<bool>("Unused");

                    b.Property<int>("UserId");

                    b.Property<DateTime>("WeekStart");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("MeasureTypeId");

                    b.HasIndex("UserId", "WeekStart");

                    b.ToTable("ShoppingListItems");
                });

            modelBuilder.Entity("MealsService.ShoppingList.Data.ShoppingListItemPreparation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PreparationId");

                    b.Property<int>("ShoppingListItemId");

                    b.HasKey("Id");

                    b.HasIndex("PreparationId");

                    b.HasIndex("ShoppingListItemId");

                    b.ToTable("ShoppingListItemPreparation");
                });

            modelBuilder.Entity("MealsService.Stats.Data.ImpactStatement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Alt");

                    b.Property<int>("ImpactType");

                    b.Property<string>("ParametersRaw");

                    b.Property<string>("RefUrl");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.ToTable("ImpactStatements");
                });

            modelBuilder.Entity("MealsService.Stats.Data.StatSnapshot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Challenges");

                    b.Property<int>("Goal");

                    b.Property<int>("MealsPerDay");

                    b.Property<int>("Streak");

                    b.Property<int>("UserId");

                    b.Property<int>("Value");

                    b.Property<DateTime>("Week");

                    b.HasKey("Id");

                    b.ToTable("StatSnapshots");
                });

            modelBuilder.Entity("MealsService.Tags.Data.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("MealsService.Diets.Data.DietGoal", b =>
                {
                    b.HasOne("MealsService.Diets.Data.DietType", "TargetDietType")
                        .WithMany()
                        .HasForeignKey("TargetDietId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MealsService.Diets.Data.MenuPreference", b =>
                {
                    b.HasOne("MealsService.Diets.Data.DietType", "CurrentDietType")
                        .WithMany()
                        .HasForeignKey("CurrentDietTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MealsService.Diets.Data.PrepPlanConsumer", b =>
                {
                    b.HasOne("MealsService.Diets.Data.PrepPlanGenerator", "Generator")
                        .WithMany("Consumers")
                        .HasForeignKey("GeneratorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MealsService.Diets.Data.PrepPlan", "PrepPlan")
                        .WithMany("Consumers")
                        .HasForeignKey("PrepPlanId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MealsService.Diets.Data.PrepPlanGenerator", b =>
                {
                    b.HasOne("MealsService.Diets.Data.PrepPlan")
                        .WithMany("Generators")
                        .HasForeignKey("PrepPlanId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MealsService.Ingredients.Data.Ingredient", b =>
                {
                    b.HasOne("MealsService.Ingredients.Data.IngredientCategory", "IngredientCategory")
                        .WithMany()
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("MealsService.Ingredients.Data.IngredientMeasureType", b =>
                {
                    b.HasOne("MealsService.Ingredients.Data.Ingredient", "Ingredient")
                        .WithMany("IngredientMeasureTypes")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MealsService.Ingredients.Data.MeasureType", "MeasureType")
                        .WithMany()
                        .HasForeignKey("MeasureTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MealsService.Ingredients.Data.IngredientTag", b =>
                {
                    b.HasOne("MealsService.Ingredients.Data.Ingredient", "Ingredient")
                        .WithMany("IngredientTags")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MealsService.Tags.Data.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MealsService.Recipes.Data.RecipeDietType", b =>
                {
                    b.HasOne("MealsService.Diets.Data.DietType", "DietType")
                        .WithMany()
                        .HasForeignKey("DietTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MealsService.Recipes.Data.Recipe", "Recipe")
                        .WithMany("RecipeDietTypes")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MealsService.Recipes.Data.RecipeIngredient", b =>
                {
                    b.HasOne("MealsService.Ingredients.Data.Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MealsService.Ingredients.Data.MeasureType", "MeasureType")
                        .WithMany()
                        .HasForeignKey("MeasureTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MealsService.Recipes.Data.Recipe", "Recipe")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MealsService.Recipes.Data.RecipeStep", b =>
                {
                    b.HasOne("MealsService.Recipes.Data.Recipe", "Recipe")
                        .WithMany("Steps")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MealsService.Recipes.Data.RecipeVote", b =>
                {
                    b.HasOne("MealsService.Recipes.Data.Recipe")
                        .WithMany("Votes")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MealsService.Schedules.Data.Meal", b =>
                {
                    b.HasOne("MealsService.Schedules.Data.Preparation", "Preparation")
                        .WithMany("Meals")
                        .HasForeignKey("PreparationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MealsService.Recipes.Data.Recipe", "Recipe")
                        .WithMany()
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MealsService.Schedules.Data.ScheduleDay", "ScheduleDay")
                        .WithMany("Meals")
                        .HasForeignKey("ScheduleDayId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MealsService.Schedules.Data.Preparation", b =>
                {
                    b.HasOne("MealsService.Recipes.Data.Recipe", "Recipe")
                        .WithMany()
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MealsService.Schedules.Data.ScheduleDay", "ScheduleDay")
                        .WithMany("Preparations")
                        .HasForeignKey("ScheduleDayId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MealsService.Schedules.Data.ScheduleDay", b =>
                {
                    b.HasOne("MealsService.Diets.Data.DietType", "DietType")
                        .WithMany()
                        .HasForeignKey("DietTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MealsService.ShoppingList.Data.ShoppingListItem", b =>
                {
                    b.HasOne("MealsService.Ingredients.Data.Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MealsService.Ingredients.Data.MeasureType", "MeasureType")
                        .WithMany()
                        .HasForeignKey("MeasureTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MealsService.ShoppingList.Data.ShoppingListItemPreparation", b =>
                {
                    b.HasOne("MealsService.Schedules.Data.Preparation", "Preparation")
                        .WithMany()
                        .HasForeignKey("PreparationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MealsService.ShoppingList.Data.ShoppingListItem", "ShoppingListItem")
                        .WithMany("ShoppingListItemPreparations")
                        .HasForeignKey("ShoppingListItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
